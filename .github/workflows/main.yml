name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Compile source (.NET 8 + .NETStandard)
        run: |
          dotnet build src/HL7-V2.csproj --configuration Release
          dotnet build src/HL7-V2.csproj --configuration Release -f netstandard2.0
      - name: Run unit tests (.NET 8 + .NETStandard)
        run: |
          dotnet test test/HL7Test.csproj --configuration Release --logger:trx
          dotnet test test/HL7Test.csproj --configuration Release --logger:trx -f netstandard2.0
        env:
          TEST_TITLE: HL7-V2 unit test

  check-paths:
    runs-on: windows-latest
    needs: 
      - build
    outputs:
      only-tests: ${{ steps.check.outputs.only-tests }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check if only test folder changed
        id: check
        shell: bash
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "Changed files:"
          echo "$CHANGED"
          ONLY_TESTS=true
          for file in $CHANGED; do
            if [[ ! "$file" =~ ^test/ ]]; then
              ONLY_TESTS=false
              break
            fi
          done
          echo "only-tests=$ONLY_TESTS" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build
      - check-paths
    if: needs.check-paths.outputs.only-tests != 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Prepare NuGet package
        run: dotnet pack **/HL7-V2.csproj --configuration Release
      - name: Publish NuGet package
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push **/*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json
